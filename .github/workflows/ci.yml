on:
  push:
    branches: [master]
name: Test
jobs:
  build:
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: make buildWithArch
      - name: Store binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-binary
          path: ./bin/*
  test:
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: make test
  tag:
    runs-on: ubuntu-latest
    needs: [build, test]
    output:
      tagName: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: tag
        uses: anothrNick/github-tag-action@1.33.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
  release:
    runs-on: ubuntu-latest
    needs: [tag]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.tag }}
          release_name: Release ${{ github.ref }}
  uploadArtifacts:
    needs: [release]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.os }}-binary
      - name: Get the version
        id: binaryFilename
        run: echo ::set-env name=binaryFilename::$(make buildName)
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ${{ env.binaryFilename }}